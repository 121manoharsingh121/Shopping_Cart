[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "myapp.models",
        "description": "myapp.models",
        "isExtraImport": true,
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Item",
        "importPath": "myapp.models",
        "description": "myapp.models",
        "isExtraImport": true,
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "myapp.models",
        "description": "myapp.models",
        "isExtraImport": true,
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "myapp.models",
        "description": "myapp.models",
        "isExtraImport": true,
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "myapp.models",
        "description": "myapp.models",
        "isExtraImport": true,
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "ItemListView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "ItemFilterView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "CartView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "CartItemView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "importPath": "myapp.views",
        "description": "myapp.views",
        "isExtraImport": true,
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.8/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.8/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.8/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.8/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.8/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "env.bin.activate_this",
        "description": "env.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0001_initial",
        "description": "myapp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "myapp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0002_auto_20230609_1237",
        "description": "myapp.migrations.0002_auto_20230609_1237",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='address',\n            field=models.CharField(default=2, max_length=255),\n            preserve_default=False,",
        "detail": "myapp.migrations.0002_auto_20230609_1237",
        "documentation": {}
    },
    {
        "label": "MyappConfig",
        "kind": 6,
        "importPath": "myapp.apps",
        "description": "myapp.apps",
        "peekOfCode": "class MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'",
        "detail": "myapp.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class User(AbstractUser):\n    email = models.EmailField(unique=True)\n    phone_number = models.CharField(max_length=15)\n    address = models.CharField(max_length=255)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['username']\n    def __str__(self):\n        return self.email\nclass Category(models.Model):\n    name = models.CharField(max_length=255)",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=255)\n    def __str__(self):\n        return self.name\nclass Item(models.Model):\n    name = models.CharField(max_length=255)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    def __str__(self):\n        return self.name",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Item",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Item(models.Model):\n    name = models.CharField(max_length=255)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    def __str__(self):\n        return self.name\n# class Cart(models.Model):\n#     user = models.OneToOneField(User, on_delete=models.CASCADE)\n#     total_price = models.DecimalField(max_digits=10, decimal_places=2, default=0)\n#     def __str__(self):",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Cart(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, null=True)\n    total_price = models.DecimalField(max_digits=8, decimal_places=2, default=0)\n    def update_total_price(self):\n        self.total_price = self.cartitem_set.aggregate(models.Sum('price'))['price__sum'] or 0\n        self.save()\n    def __str__(self):\n        if self.user:\n            return f\"{self.user.username}'s Cart\"\n        else:",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    item = models.ForeignKey(Item, on_delete=models.CASCADE)\n    quantity = models.PositiveIntegerField(default=1)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    def subtotal(self):\n        return self.quantity * self.item.price\n    def __str__(self):\n        return f\"CartItem {self.item} in {self.cart}\"",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "myapp.serializers",
        "description": "myapp.serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = '__all__'\nclass ItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Item\n        fields = '__all__'\nclass CartItemSerializer(serializers.ModelSerializer):\n    item = ItemSerializer()",
        "detail": "myapp.serializers",
        "documentation": {}
    },
    {
        "label": "ItemSerializer",
        "kind": 6,
        "importPath": "myapp.serializers",
        "description": "myapp.serializers",
        "peekOfCode": "class ItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Item\n        fields = '__all__'\nclass CartItemSerializer(serializers.ModelSerializer):\n    item = ItemSerializer()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'item', 'quantity', 'price']\nclass CartSerializer(serializers.ModelSerializer):",
        "detail": "myapp.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "myapp.serializers",
        "description": "myapp.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    item = ItemSerializer()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'item', 'quantity', 'price']\nclass CartSerializer(serializers.ModelSerializer):\n    cart_items = CartItemSerializer(many=True, read_only=True)\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'total_price', 'cart_items']",
        "detail": "myapp.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "myapp.serializers",
        "description": "myapp.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    cart_items = CartItemSerializer(many=True, read_only=True)\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'total_price', 'cart_items']\n        read_only_fields = ['user', 'total_price']\n    def create(self, validated_data):\n        cart_items_data = self.context.get('request').data.get('cart_items')\n        cart = Cart.objects.create(user=self.context.get('request').user)\n        for item_data in cart_items_data:",
        "detail": "myapp.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "myapp.serializers",
        "description": "myapp.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'email', 'first_name', 'last_name', 'address', 'password']\n        extra_kwargs = {'password': {'write_only': True}}\n    def create(self, validated_data):\n        user = User.objects.create_user(\n            email=validated_data['email'],\n            first_name=validated_data['first_name'],\n            last_name=validated_data['last_name'],",
        "detail": "myapp.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "myapp.urls",
        "description": "myapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('categories/', CategoryListView.as_view(), name='category-list'),\n    path('items/', ItemListView.as_view(), name='item-list'),\n    path('items/<int:category_id>/', ItemFilterView.as_view(), name='item-filter'),\n    path('cart/', CartView.as_view(), name='cart'),\n    path('cart/items/', CartItemView.as_view(), name='cart-item'),\n    path('login/', UserLoginView.as_view(), name='login'),\n]",
        "detail": "myapp.urls",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class CategoryListView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request):\n        categories = Category.objects.all()\n        serializer = CategorySerializer(categories, many=True)\n        return Response(serializer.data)\nclass ItemListView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request):\n        items = Item.objects.all()",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "ItemListView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class ItemListView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request):\n        items = Item.objects.all()\n        serializer = ItemSerializer(items, many=True)\n        return Response(serializer.data)\nclass ItemFilterView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request, category_id):\n        items = Item.objects.filter(category=category_id)",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "ItemFilterView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class ItemFilterView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request, category_id):\n        items = Item.objects.filter(category=category_id)\n        serializer = ItemSerializer(items, many=True)\n        return Response(serializer.data)\nclass CartView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request):\n        user = request.user",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "CartView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class CartView(APIView):\n    permission_classes = [AllowAny]\n    def get(self, request):\n        user = request.user\n        if user.is_authenticated:\n            cart, created = Cart.objects.get_or_create(user=user)\n            serializer = CartSerializer(cart)\n            return Response(serializer.data)\n        else:\n            return Response({'detail': 'Cart is empty.'})",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "CartItemView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class CartItemView(APIView):\n    permission_classes = [AllowAny]\n    def post(self, request):\n        user = request.user\n        cart = None\n        if user.is_authenticated:\n            # Authenticated user\n            cart, created = Cart.objects.get_or_create(user=user)\n        else:\n            # Guest user",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "kind": 6,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "class UserLoginView(APIView):\n    permission_classes = [AllowAny]\n    def post(self, request):\n        email = request.data.get('email')\n        password = request.data.get('password')\n        user = User.objects.filter(email=email).first()\n        if user is None or not user.check_password(password):\n            return Response({'error': 'Invalid email or password'}, status=400)\n        refresh = RefreshToken.for_user(user)\n        serializer = UserSerializer(user)",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "shoppingcart.asgi",
        "description": "shoppingcart.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "shoppingcart.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-pwxb^*eh&m(8a1jxtb)rrz_9pux@zn6k^j3#7ih$cze%iu9h)='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-pwxb^*eh&m(8a1jxtb)rrz_9pux@zn6k^j3#7ih$cze%iu9h)='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'myapp', \n]",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny',\n    ],\n}\n# Set the user model to your custom User model\nAUTH_USER_MODEL = 'myapp.User'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'myapp.User'\n# Set the JWT token settings\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': False,\n}\nMIDDLEWARE = [",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': False,\n}\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'shoppingcart.urls'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "ROOT_URLCONF = 'shoppingcart.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "WSGI_APPLICATION = 'shoppingcart.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "shoppingcart.settings",
        "description": "shoppingcart.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "shoppingcart.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "shoppingcart.urls",
        "description": "shoppingcart.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('myapp.urls'))\n]",
        "detail": "shoppingcart.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "shoppingcart.wsgi",
        "description": "shoppingcart.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "shoppingcart.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shoppingcart.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]